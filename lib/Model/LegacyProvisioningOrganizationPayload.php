<?php
/**
 * LegacyProvisioningOrganizationPayload
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Equisoft\SDK\EquisoftConnect
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Equisoft /connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Equisoft\SDK\EquisoftConnect\Model;

use \ArrayAccess;
use \Equisoft\SDK\EquisoftConnect\ObjectSerializer;

/**
 * LegacyProvisioningOrganizationPayload Class Doc Comment
 *
 * @category Class
 * @package  Equisoft\SDK\EquisoftConnect
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class LegacyProvisioningOrganizationPayload implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'legacy.provisioning.OrganizationPayload';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'database' => 'string',
        'profile' => 'string',
        'organizationName' => 'string',
        'ownerName' => 'string',
        'ownerEmail' => 'string',
        'lang' => 'string',
        'parentOrganizationUuid' => 'string',
        'mainPhone' => 'string',
        'tollFree' => 'string',
        'fax' => 'string',
        'address' => 'string',
        'addressLine2' => 'string',
        'addressCity' => 'string',
        'addressState' => 'string',
        'addressPostalCode' => 'string',
        'addressCountry' => 'string',
        'webSite' => 'string',
        'organizationEmail' => 'string',
        'distributor' => 'string',
        'installPersonalizedFieldsModule' => 'bool',
        'installFnaModule' => 'bool',
        'dsfFinancialCenterId' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'database' => null,
        'profile' => null,
        'organizationName' => null,
        'ownerName' => null,
        'ownerEmail' => null,
        'lang' => null,
        'parentOrganizationUuid' => null,
        'mainPhone' => null,
        'tollFree' => null,
        'fax' => null,
        'address' => null,
        'addressLine2' => null,
        'addressCity' => null,
        'addressState' => null,
        'addressPostalCode' => null,
        'addressCountry' => null,
        'webSite' => null,
        'organizationEmail' => null,
        'distributor' => null,
        'installPersonalizedFieldsModule' => null,
        'installFnaModule' => null,
        'dsfFinancialCenterId' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'database' => 'database',
        'profile' => 'profile',
        'organizationName' => 'organizationName',
        'ownerName' => 'ownerName',
        'ownerEmail' => 'ownerEmail',
        'lang' => 'lang',
        'parentOrganizationUuid' => 'parentOrganizationUuid',
        'mainPhone' => 'mainPhone',
        'tollFree' => 'tollFree',
        'fax' => 'fax',
        'address' => 'address',
        'addressLine2' => 'addressLine2',
        'addressCity' => 'addressCity',
        'addressState' => 'addressState',
        'addressPostalCode' => 'addressPostalCode',
        'addressCountry' => 'addressCountry',
        'webSite' => 'webSite',
        'organizationEmail' => 'organizationEmail',
        'distributor' => 'distributor',
        'installPersonalizedFieldsModule' => 'installPersonalizedFieldsModule',
        'installFnaModule' => 'installFnaModule',
        'dsfFinancialCenterId' => 'dsfFinancialCenterId'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'database' => 'setDatabase',
        'profile' => 'setProfile',
        'organizationName' => 'setOrganizationName',
        'ownerName' => 'setOwnerName',
        'ownerEmail' => 'setOwnerEmail',
        'lang' => 'setLang',
        'parentOrganizationUuid' => 'setParentOrganizationUuid',
        'mainPhone' => 'setMainPhone',
        'tollFree' => 'setTollFree',
        'fax' => 'setFax',
        'address' => 'setAddress',
        'addressLine2' => 'setAddressLine2',
        'addressCity' => 'setAddressCity',
        'addressState' => 'setAddressState',
        'addressPostalCode' => 'setAddressPostalCode',
        'addressCountry' => 'setAddressCountry',
        'webSite' => 'setWebSite',
        'organizationEmail' => 'setOrganizationEmail',
        'distributor' => 'setDistributor',
        'installPersonalizedFieldsModule' => 'setInstallPersonalizedFieldsModule',
        'installFnaModule' => 'setInstallFnaModule',
        'dsfFinancialCenterId' => 'setDsfFinancialCenterId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'database' => 'getDatabase',
        'profile' => 'getProfile',
        'organizationName' => 'getOrganizationName',
        'ownerName' => 'getOwnerName',
        'ownerEmail' => 'getOwnerEmail',
        'lang' => 'getLang',
        'parentOrganizationUuid' => 'getParentOrganizationUuid',
        'mainPhone' => 'getMainPhone',
        'tollFree' => 'getTollFree',
        'fax' => 'getFax',
        'address' => 'getAddress',
        'addressLine2' => 'getAddressLine2',
        'addressCity' => 'getAddressCity',
        'addressState' => 'getAddressState',
        'addressPostalCode' => 'getAddressPostalCode',
        'addressCountry' => 'getAddressCountry',
        'webSite' => 'getWebSite',
        'organizationEmail' => 'getOrganizationEmail',
        'distributor' => 'getDistributor',
        'installPersonalizedFieldsModule' => 'getInstallPersonalizedFieldsModule',
        'installFnaModule' => 'getInstallFnaModule',
        'dsfFinancialCenterId' => 'getDsfFinancialCenterId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['database'] = $data['database'] ?? null;
        $this->container['profile'] = $data['profile'] ?? null;
        $this->container['organizationName'] = $data['organizationName'] ?? null;
        $this->container['ownerName'] = $data['ownerName'] ?? null;
        $this->container['ownerEmail'] = $data['ownerEmail'] ?? null;
        $this->container['lang'] = $data['lang'] ?? null;
        $this->container['parentOrganizationUuid'] = $data['parentOrganizationUuid'] ?? null;
        $this->container['mainPhone'] = $data['mainPhone'] ?? null;
        $this->container['tollFree'] = $data['tollFree'] ?? null;
        $this->container['fax'] = $data['fax'] ?? null;
        $this->container['address'] = $data['address'] ?? null;
        $this->container['addressLine2'] = $data['addressLine2'] ?? null;
        $this->container['addressCity'] = $data['addressCity'] ?? null;
        $this->container['addressState'] = $data['addressState'] ?? null;
        $this->container['addressPostalCode'] = $data['addressPostalCode'] ?? null;
        $this->container['addressCountry'] = $data['addressCountry'] ?? null;
        $this->container['webSite'] = $data['webSite'] ?? null;
        $this->container['organizationEmail'] = $data['organizationEmail'] ?? null;
        $this->container['distributor'] = $data['distributor'] ?? null;
        $this->container['installPersonalizedFieldsModule'] = $data['installPersonalizedFieldsModule'] ?? null;
        $this->container['installFnaModule'] = $data['installFnaModule'] ?? null;
        $this->container['dsfFinancialCenterId'] = $data['dsfFinancialCenterId'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets database
     *
     * @return string|null
     */
    public function getDatabase()
    {
        return $this->container['database'];
    }

    /**
     * Sets database
     *
     * @param string|null $database Database's name.
     *
     * @return self
     */
    public function setDatabase($database)
    {
        $this->container['database'] = $database;

        return $this;
    }

    /**
     * Gets profile
     *
     * @return string|null
     */
    public function getProfile()
    {
        return $this->container['profile'];
    }

    /**
     * Sets profile
     *
     * @param string|null $profile Database's profile.
     *
     * @return self
     */
    public function setProfile($profile)
    {
        $this->container['profile'] = $profile;

        return $this;
    }

    /**
     * Gets organizationName
     *
     * @return string|null
     */
    public function getOrganizationName()
    {
        return $this->container['organizationName'];
    }

    /**
     * Sets organizationName
     *
     * @param string|null $organizationName Organization name.
     *
     * @return self
     */
    public function setOrganizationName($organizationName)
    {
        $this->container['organizationName'] = $organizationName;

        return $this;
    }

    /**
     * Gets ownerName
     *
     * @return string|null
     */
    public function getOwnerName()
    {
        return $this->container['ownerName'];
    }

    /**
     * Sets ownerName
     *
     * @param string|null $ownerName Owner user name.
     *
     * @return self
     */
    public function setOwnerName($ownerName)
    {
        $this->container['ownerName'] = $ownerName;

        return $this;
    }

    /**
     * Gets ownerEmail
     *
     * @return string|null
     */
    public function getOwnerEmail()
    {
        return $this->container['ownerEmail'];
    }

    /**
     * Sets ownerEmail
     *
     * @param string|null $ownerEmail Owner user email.
     *
     * @return self
     */
    public function setOwnerEmail($ownerEmail)
    {
        $this->container['ownerEmail'] = $ownerEmail;

        return $this;
    }

    /**
     * Gets lang
     *
     * @return string|null
     */
    public function getLang()
    {
        return $this->container['lang'];
    }

    /**
     * Sets lang
     *
     * @param string|null $lang Default language.
     *
     * @return self
     */
    public function setLang($lang)
    {
        $this->container['lang'] = $lang;

        return $this;
    }

    /**
     * Gets parentOrganizationUuid
     *
     * @return string|null
     */
    public function getParentOrganizationUuid()
    {
        return $this->container['parentOrganizationUuid'];
    }

    /**
     * Sets parentOrganizationUuid
     *
     * @param string|null $parentOrganizationUuid Parent Account-Service/CPanel2 organization uuid.
     *
     * @return self
     */
    public function setParentOrganizationUuid($parentOrganizationUuid)
    {
        $this->container['parentOrganizationUuid'] = $parentOrganizationUuid;

        return $this;
    }

    /**
     * Gets mainPhone
     *
     * @return string|null
     */
    public function getMainPhone()
    {
        return $this->container['mainPhone'];
    }

    /**
     * Sets mainPhone
     *
     * @param string|null $mainPhone Organization main phone number.
     *
     * @return self
     */
    public function setMainPhone($mainPhone)
    {
        $this->container['mainPhone'] = $mainPhone;

        return $this;
    }

    /**
     * Gets tollFree
     *
     * @return string|null
     */
    public function getTollFree()
    {
        return $this->container['tollFree'];
    }

    /**
     * Sets tollFree
     *
     * @param string|null $tollFree Organization tollFree phone number.
     *
     * @return self
     */
    public function setTollFree($tollFree)
    {
        $this->container['tollFree'] = $tollFree;

        return $this;
    }

    /**
     * Gets fax
     *
     * @return string|null
     */
    public function getFax()
    {
        return $this->container['fax'];
    }

    /**
     * Sets fax
     *
     * @param string|null $fax Organization fax phone number.
     *
     * @return self
     */
    public function setFax($fax)
    {
        $this->container['fax'] = $fax;

        return $this;
    }

    /**
     * Gets address
     *
     * @return string|null
     */
    public function getAddress()
    {
        return $this->container['address'];
    }

    /**
     * Sets address
     *
     * @param string|null $address Organization address first line.
     *
     * @return self
     */
    public function setAddress($address)
    {
        $this->container['address'] = $address;

        return $this;
    }

    /**
     * Gets addressLine2
     *
     * @return string|null
     */
    public function getAddressLine2()
    {
        return $this->container['addressLine2'];
    }

    /**
     * Sets addressLine2
     *
     * @param string|null $addressLine2 Organization address second line.
     *
     * @return self
     */
    public function setAddressLine2($addressLine2)
    {
        $this->container['addressLine2'] = $addressLine2;

        return $this;
    }

    /**
     * Gets addressCity
     *
     * @return string|null
     */
    public function getAddressCity()
    {
        return $this->container['addressCity'];
    }

    /**
     * Sets addressCity
     *
     * @param string|null $addressCity Organization address city.
     *
     * @return self
     */
    public function setAddressCity($addressCity)
    {
        $this->container['addressCity'] = $addressCity;

        return $this;
    }

    /**
     * Gets addressState
     *
     * @return string|null
     */
    public function getAddressState()
    {
        return $this->container['addressState'];
    }

    /**
     * Sets addressState
     *
     * @param string|null $addressState Organization address state/province.
     *
     * @return self
     */
    public function setAddressState($addressState)
    {
        $this->container['addressState'] = $addressState;

        return $this;
    }

    /**
     * Gets addressPostalCode
     *
     * @return string|null
     */
    public function getAddressPostalCode()
    {
        return $this->container['addressPostalCode'];
    }

    /**
     * Sets addressPostalCode
     *
     * @param string|null $addressPostalCode Organization address postal code.
     *
     * @return self
     */
    public function setAddressPostalCode($addressPostalCode)
    {
        $this->container['addressPostalCode'] = $addressPostalCode;

        return $this;
    }

    /**
     * Gets addressCountry
     *
     * @return string|null
     */
    public function getAddressCountry()
    {
        return $this->container['addressCountry'];
    }

    /**
     * Sets addressCountry
     *
     * @param string|null $addressCountry Organization address country.
     *
     * @return self
     */
    public function setAddressCountry($addressCountry)
    {
        $this->container['addressCountry'] = $addressCountry;

        return $this;
    }

    /**
     * Gets webSite
     *
     * @return string|null
     */
    public function getWebSite()
    {
        return $this->container['webSite'];
    }

    /**
     * Sets webSite
     *
     * @param string|null $webSite Organization website url.
     *
     * @return self
     */
    public function setWebSite($webSite)
    {
        $this->container['webSite'] = $webSite;

        return $this;
    }

    /**
     * Gets organizationEmail
     *
     * @return string|null
     */
    public function getOrganizationEmail()
    {
        return $this->container['organizationEmail'];
    }

    /**
     * Sets organizationEmail
     *
     * @param string|null $organizationEmail Organization email.
     *
     * @return self
     */
    public function setOrganizationEmail($organizationEmail)
    {
        $this->container['organizationEmail'] = $organizationEmail;

        return $this;
    }

    /**
     * Gets distributor
     *
     * @return string|null
     */
    public function getDistributor()
    {
        return $this->container['distributor'];
    }

    /**
     * Sets distributor
     *
     * @param string|null $distributor Distributor.
     *
     * @return self
     */
    public function setDistributor($distributor)
    {
        $this->container['distributor'] = $distributor;

        return $this;
    }

    /**
     * Gets installPersonalizedFieldsModule
     *
     * @return bool|null
     */
    public function getInstallPersonalizedFieldsModule()
    {
        return $this->container['installPersonalizedFieldsModule'];
    }

    /**
     * Sets installPersonalizedFieldsModule
     *
     * @param bool|null $installPersonalizedFieldsModule Install personalized fields module.
     *
     * @return self
     */
    public function setInstallPersonalizedFieldsModule($installPersonalizedFieldsModule)
    {
        $this->container['installPersonalizedFieldsModule'] = $installPersonalizedFieldsModule;

        return $this;
    }

    /**
     * Gets installFnaModule
     *
     * @return bool|null
     */
    public function getInstallFnaModule()
    {
        return $this->container['installFnaModule'];
    }

    /**
     * Sets installFnaModule
     *
     * @param bool|null $installFnaModule Install FNA module.
     *
     * @return self
     */
    public function setInstallFnaModule($installFnaModule)
    {
        $this->container['installFnaModule'] = $installFnaModule;

        return $this;
    }

    /**
     * Gets dsfFinancialCenterId
     *
     * @return string|null
     */
    public function getDsfFinancialCenterId()
    {
        return $this->container['dsfFinancialCenterId'];
    }

    /**
     * Sets dsfFinancialCenterId
     *
     * @param string|null $dsfFinancialCenterId DSF financial center id.
     *
     * @return self
     */
    public function setDsfFinancialCenterId($dsfFinancialCenterId)
    {
        $this->container['dsfFinancialCenterId'] = $dsfFinancialCenterId;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


