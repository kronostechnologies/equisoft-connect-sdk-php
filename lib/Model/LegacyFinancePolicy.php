<?php
/**
 * LegacyFinancePolicy
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  Equisoft\SDK\EquisoftConnect
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Equisoft /connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Equisoft\SDK\EquisoftConnect\Model;

use \ArrayAccess;
use \Equisoft\SDK\EquisoftConnect\ObjectSerializer;

/**
 * LegacyFinancePolicy Class Doc Comment
 *
 * @category Class
 * @package  Equisoft\SDK\EquisoftConnect
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class LegacyFinancePolicy implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'legacy.finance.Policy';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'string',
        'policyNb' => 'string',
        'lineOfBusiness' => 'string',
        'lineOfBusinessLabel' => 'string',
        'type' => 'string',
        'owner' => 'string',
        'carrier' => 'string',
        'issueDate' => 'string',
        'endDate' => 'string',
        'annualPremium' => 'string',
        'modalPremium' => 'string',
        'annualizedPremium' => 'string',
        'premiumMode' => 'string',
        'isOwner' => 'string',
        'isInsured' => 'string',
        'isBeneficiary' => 'string',
        'coverages' => '\Equisoft\SDK\EquisoftConnect\Model\LegacyFinancePolicyCoverage[]',
        'status' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => null,
        'policyNb' => null,
        'lineOfBusiness' => null,
        'lineOfBusinessLabel' => null,
        'type' => null,
        'owner' => null,
        'carrier' => null,
        'issueDate' => null,
        'endDate' => null,
        'annualPremium' => null,
        'modalPremium' => null,
        'annualizedPremium' => null,
        'premiumMode' => null,
        'isOwner' => null,
        'isInsured' => null,
        'isBeneficiary' => null,
        'coverages' => null,
        'status' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'policyNb' => 'policyNb',
        'lineOfBusiness' => 'lineOfBusiness',
        'lineOfBusinessLabel' => 'lineOfBusinessLabel',
        'type' => 'type',
        'owner' => 'owner',
        'carrier' => 'carrier',
        'issueDate' => 'issueDate',
        'endDate' => 'endDate',
        'annualPremium' => 'annualPremium',
        'modalPremium' => 'modalPremium',
        'annualizedPremium' => 'annualizedPremium',
        'premiumMode' => 'premiumMode',
        'isOwner' => 'isOwner',
        'isInsured' => 'isInsured',
        'isBeneficiary' => 'isBeneficiary',
        'coverages' => 'coverages',
        'status' => 'status'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'policyNb' => 'setPolicyNb',
        'lineOfBusiness' => 'setLineOfBusiness',
        'lineOfBusinessLabel' => 'setLineOfBusinessLabel',
        'type' => 'setType',
        'owner' => 'setOwner',
        'carrier' => 'setCarrier',
        'issueDate' => 'setIssueDate',
        'endDate' => 'setEndDate',
        'annualPremium' => 'setAnnualPremium',
        'modalPremium' => 'setModalPremium',
        'annualizedPremium' => 'setAnnualizedPremium',
        'premiumMode' => 'setPremiumMode',
        'isOwner' => 'setIsOwner',
        'isInsured' => 'setIsInsured',
        'isBeneficiary' => 'setIsBeneficiary',
        'coverages' => 'setCoverages',
        'status' => 'setStatus'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'policyNb' => 'getPolicyNb',
        'lineOfBusiness' => 'getLineOfBusiness',
        'lineOfBusinessLabel' => 'getLineOfBusinessLabel',
        'type' => 'getType',
        'owner' => 'getOwner',
        'carrier' => 'getCarrier',
        'issueDate' => 'getIssueDate',
        'endDate' => 'getEndDate',
        'annualPremium' => 'getAnnualPremium',
        'modalPremium' => 'getModalPremium',
        'annualizedPremium' => 'getAnnualizedPremium',
        'premiumMode' => 'getPremiumMode',
        'isOwner' => 'getIsOwner',
        'isInsured' => 'getIsInsured',
        'isBeneficiary' => 'getIsBeneficiary',
        'coverages' => 'getCoverages',
        'status' => 'getStatus'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['policyNb'] = $data['policyNb'] ?? null;
        $this->container['lineOfBusiness'] = $data['lineOfBusiness'] ?? null;
        $this->container['lineOfBusinessLabel'] = $data['lineOfBusinessLabel'] ?? null;
        $this->container['type'] = $data['type'] ?? null;
        $this->container['owner'] = $data['owner'] ?? null;
        $this->container['carrier'] = $data['carrier'] ?? null;
        $this->container['issueDate'] = $data['issueDate'] ?? null;
        $this->container['endDate'] = $data['endDate'] ?? null;
        $this->container['annualPremium'] = $data['annualPremium'] ?? null;
        $this->container['modalPremium'] = $data['modalPremium'] ?? null;
        $this->container['annualizedPremium'] = $data['annualizedPremium'] ?? null;
        $this->container['premiumMode'] = $data['premiumMode'] ?? null;
        $this->container['isOwner'] = $data['isOwner'] ?? null;
        $this->container['isInsured'] = $data['isInsured'] ?? null;
        $this->container['isBeneficiary'] = $data['isBeneficiary'] ?? null;
        $this->container['coverages'] = $data['coverages'] ?? null;
        $this->container['status'] = $data['status'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string|null $id id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets policyNb
     *
     * @return string|null
     */
    public function getPolicyNb()
    {
        return $this->container['policyNb'];
    }

    /**
     * Sets policyNb
     *
     * @param string|null $policyNb policyNb
     *
     * @return self
     */
    public function setPolicyNb($policyNb)
    {
        $this->container['policyNb'] = $policyNb;

        return $this;
    }

    /**
     * Gets lineOfBusiness
     *
     * @return string|null
     */
    public function getLineOfBusiness()
    {
        return $this->container['lineOfBusiness'];
    }

    /**
     * Sets lineOfBusiness
     *
     * @param string|null $lineOfBusiness lineOfBusiness
     *
     * @return self
     */
    public function setLineOfBusiness($lineOfBusiness)
    {
        $this->container['lineOfBusiness'] = $lineOfBusiness;

        return $this;
    }

    /**
     * Gets lineOfBusinessLabel
     *
     * @return string|null
     */
    public function getLineOfBusinessLabel()
    {
        return $this->container['lineOfBusinessLabel'];
    }

    /**
     * Sets lineOfBusinessLabel
     *
     * @param string|null $lineOfBusinessLabel lineOfBusinessLabel
     *
     * @return self
     */
    public function setLineOfBusinessLabel($lineOfBusinessLabel)
    {
        $this->container['lineOfBusinessLabel'] = $lineOfBusinessLabel;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string|null
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string|null $type type
     *
     * @return self
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets owner
     *
     * @return string|null
     */
    public function getOwner()
    {
        return $this->container['owner'];
    }

    /**
     * Sets owner
     *
     * @param string|null $owner owner
     *
     * @return self
     */
    public function setOwner($owner)
    {
        $this->container['owner'] = $owner;

        return $this;
    }

    /**
     * Gets carrier
     *
     * @return string|null
     */
    public function getCarrier()
    {
        return $this->container['carrier'];
    }

    /**
     * Sets carrier
     *
     * @param string|null $carrier carrier
     *
     * @return self
     */
    public function setCarrier($carrier)
    {
        $this->container['carrier'] = $carrier;

        return $this;
    }

    /**
     * Gets issueDate
     *
     * @return string|null
     */
    public function getIssueDate()
    {
        return $this->container['issueDate'];
    }

    /**
     * Sets issueDate
     *
     * @param string|null $issueDate issueDate
     *
     * @return self
     */
    public function setIssueDate($issueDate)
    {
        $this->container['issueDate'] = $issueDate;

        return $this;
    }

    /**
     * Gets endDate
     *
     * @return string|null
     */
    public function getEndDate()
    {
        return $this->container['endDate'];
    }

    /**
     * Sets endDate
     *
     * @param string|null $endDate endDate
     *
     * @return self
     */
    public function setEndDate($endDate)
    {
        $this->container['endDate'] = $endDate;

        return $this;
    }

    /**
     * Gets annualPremium
     *
     * @return string|null
     */
    public function getAnnualPremium()
    {
        return $this->container['annualPremium'];
    }

    /**
     * Sets annualPremium
     *
     * @param string|null $annualPremium annualPremium
     *
     * @return self
     */
    public function setAnnualPremium($annualPremium)
    {
        $this->container['annualPremium'] = $annualPremium;

        return $this;
    }

    /**
     * Gets modalPremium
     *
     * @return string|null
     */
    public function getModalPremium()
    {
        return $this->container['modalPremium'];
    }

    /**
     * Sets modalPremium
     *
     * @param string|null $modalPremium modalPremium
     *
     * @return self
     */
    public function setModalPremium($modalPremium)
    {
        $this->container['modalPremium'] = $modalPremium;

        return $this;
    }

    /**
     * Gets annualizedPremium
     *
     * @return string|null
     */
    public function getAnnualizedPremium()
    {
        return $this->container['annualizedPremium'];
    }

    /**
     * Sets annualizedPremium
     *
     * @param string|null $annualizedPremium annualizedPremium
     *
     * @return self
     */
    public function setAnnualizedPremium($annualizedPremium)
    {
        $this->container['annualizedPremium'] = $annualizedPremium;

        return $this;
    }

    /**
     * Gets premiumMode
     *
     * @return string|null
     */
    public function getPremiumMode()
    {
        return $this->container['premiumMode'];
    }

    /**
     * Sets premiumMode
     *
     * @param string|null $premiumMode premiumMode
     *
     * @return self
     */
    public function setPremiumMode($premiumMode)
    {
        $this->container['premiumMode'] = $premiumMode;

        return $this;
    }

    /**
     * Gets isOwner
     *
     * @return string|null
     */
    public function getIsOwner()
    {
        return $this->container['isOwner'];
    }

    /**
     * Sets isOwner
     *
     * @param string|null $isOwner isOwner
     *
     * @return self
     */
    public function setIsOwner($isOwner)
    {
        $this->container['isOwner'] = $isOwner;

        return $this;
    }

    /**
     * Gets isInsured
     *
     * @return string|null
     */
    public function getIsInsured()
    {
        return $this->container['isInsured'];
    }

    /**
     * Sets isInsured
     *
     * @param string|null $isInsured isInsured
     *
     * @return self
     */
    public function setIsInsured($isInsured)
    {
        $this->container['isInsured'] = $isInsured;

        return $this;
    }

    /**
     * Gets isBeneficiary
     *
     * @return string|null
     */
    public function getIsBeneficiary()
    {
        return $this->container['isBeneficiary'];
    }

    /**
     * Sets isBeneficiary
     *
     * @param string|null $isBeneficiary isBeneficiary
     *
     * @return self
     */
    public function setIsBeneficiary($isBeneficiary)
    {
        $this->container['isBeneficiary'] = $isBeneficiary;

        return $this;
    }

    /**
     * Gets coverages
     *
     * @return \Equisoft\SDK\EquisoftConnect\Model\LegacyFinancePolicyCoverage[]|null
     */
    public function getCoverages()
    {
        return $this->container['coverages'];
    }

    /**
     * Sets coverages
     *
     * @param \Equisoft\SDK\EquisoftConnect\Model\LegacyFinancePolicyCoverage[]|null $coverages coverages
     *
     * @return self
     */
    public function setCoverages($coverages)
    {
        $this->container['coverages'] = $coverages;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string|null
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string|null $status Policy status
     *
     * @return self
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


