<?php
/**
 * LegacyContactContactPayloadItem
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Equisoft\SDK\EquisoftConnect
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Equisoft /connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Equisoft\SDK\EquisoftConnect\Model;

use \ArrayAccess;
use \Equisoft\SDK\EquisoftConnect\ObjectSerializer;

/**
 * LegacyContactContactPayloadItem Class Doc Comment
 *
 * @category Class
 * @package  Equisoft\SDK\EquisoftConnect
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class LegacyContactContactPayloadItem implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'legacy.contact.ContactPayloadItem';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'string',
        'uuid' => 'string',
        'typeContact' => 'string',
        'indOrg' => 'string',
        'displayName' => 'string',
        'firstName' => 'string',
        'nickname' => 'string',
        'middleName' => 'string',
        'lastName' => 'string',
        'corporationName' => 'string',
        'corporationNameLine2' => 'string',
        'rank' => 'string',
        'facebookLink' => 'string',
        'twitterLink' => 'string',
        'linkedinLink' => 'string',
        'avatar' => 'int',
        'picture' => '\Equisoft\SDK\EquisoftConnect\Model\LegacyContactPicture',
        'gender' => 'string',
        'sin' => 'string',
        'birthdate' => 'string',
        'smoker' => 'string',
        'smokerSince' => 'string',
        'addressHome' => '\Equisoft\SDK\EquisoftConnect\Model\LegacyContactAddress',
        'addressOffice' => '\Equisoft\SDK\EquisoftConnect\Model\LegacyContactAddress',
        'addressOther' => '\Equisoft\SDK\EquisoftConnect\Model\LegacyContactAddress',
        'phoneHome' => 'string',
        'phoneHomeSecond' => 'string',
        'phoneAssistant' => 'string',
        'phoneOffice' => 'string',
        'phoneOfficeSecond' => 'string',
        'phoneCell' => 'string',
        'phonePager' => 'string',
        'phoneFax' => 'string',
        'mainEmail' => 'string',
        'emailPersonal' => 'string',
        'webSite' => 'string',
        'emailBusiness' => 'string',
        'emailOther' => 'string',
        'notes' => 'string',
        'peculiarity' => 'string',
        'endFinancialYear' => 'string',
        'users' => '\Equisoft\SDK\EquisoftConnect\Model\LegacyUser[]',
        'language' => 'string',
        'active' => 'string',
        'publish' => 'string',
        'title' => 'string',
        'suffix' => 'string',
        'civility' => 'string',
        'civilityId' => 'int',
        'personAddressed' => 'string',
        'organizationLine1' => 'string',
        'organizationLine2' => 'string',
        'department' => 'string',
        'customerNumber' => 'string',
        'addresses' => '\Equisoft\SDK\EquisoftConnect\Model\LegacyContactAddress[]',
        'phones' => '\Equisoft\SDK\EquisoftConnect\Model\LegacyContactPhone[]',
        'emails' => '\Equisoft\SDK\EquisoftConnect\Model\LegacyContactEmail[]',
        'webSites' => '\Equisoft\SDK\EquisoftConnect\Model\LegacyContactWebSite[]',
        'birthPlace' => 'string',
        'nationality' => 'string',
        'orgDateCreated' => 'string',
        'orgDateClosed' => 'string',
        'dateEndFinancialYear' => 'string',
        'orgIdNo' => 'string',
        'orgFedNo' => 'string',
        'orgProvNo' => 'string',
        'orgStateId' => 'string',
        'orgEin' => 'string',
        'spouse' => '\Equisoft\SDK\EquisoftConnect\Model\LegacyContactSpouseContactPayloadItem',
        'externalKey' => 'string',
        'externalKeyType' => 'string',
        'classes' => '\Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue[]',
        'groups' => '\Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue[]',
        'hobbies' => '\Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue[]',
        'origins' => '\Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue[]',
        'domains' => '\Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue[]',
        'territory' => '\Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue',
        'seg1' => '\Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue',
        'seg2' => '\Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue',
        'seg3' => '\Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue',
        'seg4' => '\Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue',
        'seg5' => '\Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue',
        'seg6' => '\Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => null,
        'uuid' => null,
        'typeContact' => null,
        'indOrg' => null,
        'displayName' => null,
        'firstName' => null,
        'nickname' => null,
        'middleName' => null,
        'lastName' => null,
        'corporationName' => null,
        'corporationNameLine2' => null,
        'rank' => null,
        'facebookLink' => null,
        'twitterLink' => null,
        'linkedinLink' => null,
        'avatar' => null,
        'picture' => null,
        'gender' => null,
        'sin' => null,
        'birthdate' => null,
        'smoker' => null,
        'smokerSince' => null,
        'addressHome' => null,
        'addressOffice' => null,
        'addressOther' => null,
        'phoneHome' => null,
        'phoneHomeSecond' => null,
        'phoneAssistant' => null,
        'phoneOffice' => null,
        'phoneOfficeSecond' => null,
        'phoneCell' => null,
        'phonePager' => null,
        'phoneFax' => null,
        'mainEmail' => null,
        'emailPersonal' => null,
        'webSite' => null,
        'emailBusiness' => null,
        'emailOther' => null,
        'notes' => null,
        'peculiarity' => null,
        'endFinancialYear' => null,
        'users' => null,
        'language' => null,
        'active' => null,
        'publish' => null,
        'title' => null,
        'suffix' => null,
        'civility' => null,
        'civilityId' => null,
        'personAddressed' => null,
        'organizationLine1' => null,
        'organizationLine2' => null,
        'department' => null,
        'customerNumber' => null,
        'addresses' => null,
        'phones' => null,
        'emails' => null,
        'webSites' => null,
        'birthPlace' => null,
        'nationality' => null,
        'orgDateCreated' => null,
        'orgDateClosed' => null,
        'dateEndFinancialYear' => null,
        'orgIdNo' => null,
        'orgFedNo' => null,
        'orgProvNo' => null,
        'orgStateId' => null,
        'orgEin' => null,
        'spouse' => null,
        'externalKey' => null,
        'externalKeyType' => null,
        'classes' => null,
        'groups' => null,
        'hobbies' => null,
        'origins' => null,
        'domains' => null,
        'territory' => null,
        'seg1' => null,
        'seg2' => null,
        'seg3' => null,
        'seg4' => null,
        'seg5' => null,
        'seg6' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'uuid' => 'uuid',
        'typeContact' => 'typeContact',
        'indOrg' => 'indOrg',
        'displayName' => 'displayName',
        'firstName' => 'firstName',
        'nickname' => 'nickname',
        'middleName' => 'middleName',
        'lastName' => 'lastName',
        'corporationName' => 'corporationName',
        'corporationNameLine2' => 'corporationNameLine2',
        'rank' => 'rank',
        'facebookLink' => 'facebookLink',
        'twitterLink' => 'twitterLink',
        'linkedinLink' => 'linkedinLink',
        'avatar' => 'avatar',
        'picture' => 'picture',
        'gender' => 'gender',
        'sin' => 'sin',
        'birthdate' => 'birthdate',
        'smoker' => 'smoker',
        'smokerSince' => 'smokerSince',
        'addressHome' => 'addressHome',
        'addressOffice' => 'addressOffice',
        'addressOther' => 'addressOther',
        'phoneHome' => 'phoneHome',
        'phoneHomeSecond' => 'phoneHomeSecond',
        'phoneAssistant' => 'phoneAssistant',
        'phoneOffice' => 'phoneOffice',
        'phoneOfficeSecond' => 'phoneOfficeSecond',
        'phoneCell' => 'phoneCell',
        'phonePager' => 'phonePager',
        'phoneFax' => 'phoneFax',
        'mainEmail' => 'mainEmail',
        'emailPersonal' => 'emailPersonal',
        'webSite' => 'webSite',
        'emailBusiness' => 'emailBusiness',
        'emailOther' => 'emailOther',
        'notes' => 'notes',
        'peculiarity' => 'peculiarity',
        'endFinancialYear' => 'endFinancialYear',
        'users' => 'users',
        'language' => 'language',
        'active' => 'active',
        'publish' => 'publish',
        'title' => 'title',
        'suffix' => 'suffix',
        'civility' => 'civility',
        'civilityId' => 'civilityId',
        'personAddressed' => 'personAddressed',
        'organizationLine1' => 'organizationLine1',
        'organizationLine2' => 'organizationLine2',
        'department' => 'department',
        'customerNumber' => 'customerNumber',
        'addresses' => 'addresses',
        'phones' => 'phones',
        'emails' => 'emails',
        'webSites' => 'webSites',
        'birthPlace' => 'birthPlace',
        'nationality' => 'nationality',
        'orgDateCreated' => 'orgDateCreated',
        'orgDateClosed' => 'orgDateClosed',
        'dateEndFinancialYear' => 'dateEndFinancialYear',
        'orgIdNo' => 'orgIdNo',
        'orgFedNo' => 'orgFedNo',
        'orgProvNo' => 'orgProvNo',
        'orgStateId' => 'orgStateId',
        'orgEin' => 'orgEin',
        'spouse' => 'spouse',
        'externalKey' => 'externalKey',
        'externalKeyType' => 'externalKeyType',
        'classes' => 'classes',
        'groups' => 'groups',
        'hobbies' => 'hobbies',
        'origins' => 'origins',
        'domains' => 'domains',
        'territory' => 'territory',
        'seg1' => 'seg1',
        'seg2' => 'seg2',
        'seg3' => 'seg3',
        'seg4' => 'seg4',
        'seg5' => 'seg5',
        'seg6' => 'seg6'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'uuid' => 'setUuid',
        'typeContact' => 'setTypeContact',
        'indOrg' => 'setIndOrg',
        'displayName' => 'setDisplayName',
        'firstName' => 'setFirstName',
        'nickname' => 'setNickname',
        'middleName' => 'setMiddleName',
        'lastName' => 'setLastName',
        'corporationName' => 'setCorporationName',
        'corporationNameLine2' => 'setCorporationNameLine2',
        'rank' => 'setRank',
        'facebookLink' => 'setFacebookLink',
        'twitterLink' => 'setTwitterLink',
        'linkedinLink' => 'setLinkedinLink',
        'avatar' => 'setAvatar',
        'picture' => 'setPicture',
        'gender' => 'setGender',
        'sin' => 'setSin',
        'birthdate' => 'setBirthdate',
        'smoker' => 'setSmoker',
        'smokerSince' => 'setSmokerSince',
        'addressHome' => 'setAddressHome',
        'addressOffice' => 'setAddressOffice',
        'addressOther' => 'setAddressOther',
        'phoneHome' => 'setPhoneHome',
        'phoneHomeSecond' => 'setPhoneHomeSecond',
        'phoneAssistant' => 'setPhoneAssistant',
        'phoneOffice' => 'setPhoneOffice',
        'phoneOfficeSecond' => 'setPhoneOfficeSecond',
        'phoneCell' => 'setPhoneCell',
        'phonePager' => 'setPhonePager',
        'phoneFax' => 'setPhoneFax',
        'mainEmail' => 'setMainEmail',
        'emailPersonal' => 'setEmailPersonal',
        'webSite' => 'setWebSite',
        'emailBusiness' => 'setEmailBusiness',
        'emailOther' => 'setEmailOther',
        'notes' => 'setNotes',
        'peculiarity' => 'setPeculiarity',
        'endFinancialYear' => 'setEndFinancialYear',
        'users' => 'setUsers',
        'language' => 'setLanguage',
        'active' => 'setActive',
        'publish' => 'setPublish',
        'title' => 'setTitle',
        'suffix' => 'setSuffix',
        'civility' => 'setCivility',
        'civilityId' => 'setCivilityId',
        'personAddressed' => 'setPersonAddressed',
        'organizationLine1' => 'setOrganizationLine1',
        'organizationLine2' => 'setOrganizationLine2',
        'department' => 'setDepartment',
        'customerNumber' => 'setCustomerNumber',
        'addresses' => 'setAddresses',
        'phones' => 'setPhones',
        'emails' => 'setEmails',
        'webSites' => 'setWebSites',
        'birthPlace' => 'setBirthPlace',
        'nationality' => 'setNationality',
        'orgDateCreated' => 'setOrgDateCreated',
        'orgDateClosed' => 'setOrgDateClosed',
        'dateEndFinancialYear' => 'setDateEndFinancialYear',
        'orgIdNo' => 'setOrgIdNo',
        'orgFedNo' => 'setOrgFedNo',
        'orgProvNo' => 'setOrgProvNo',
        'orgStateId' => 'setOrgStateId',
        'orgEin' => 'setOrgEin',
        'spouse' => 'setSpouse',
        'externalKey' => 'setExternalKey',
        'externalKeyType' => 'setExternalKeyType',
        'classes' => 'setClasses',
        'groups' => 'setGroups',
        'hobbies' => 'setHobbies',
        'origins' => 'setOrigins',
        'domains' => 'setDomains',
        'territory' => 'setTerritory',
        'seg1' => 'setSeg1',
        'seg2' => 'setSeg2',
        'seg3' => 'setSeg3',
        'seg4' => 'setSeg4',
        'seg5' => 'setSeg5',
        'seg6' => 'setSeg6'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'uuid' => 'getUuid',
        'typeContact' => 'getTypeContact',
        'indOrg' => 'getIndOrg',
        'displayName' => 'getDisplayName',
        'firstName' => 'getFirstName',
        'nickname' => 'getNickname',
        'middleName' => 'getMiddleName',
        'lastName' => 'getLastName',
        'corporationName' => 'getCorporationName',
        'corporationNameLine2' => 'getCorporationNameLine2',
        'rank' => 'getRank',
        'facebookLink' => 'getFacebookLink',
        'twitterLink' => 'getTwitterLink',
        'linkedinLink' => 'getLinkedinLink',
        'avatar' => 'getAvatar',
        'picture' => 'getPicture',
        'gender' => 'getGender',
        'sin' => 'getSin',
        'birthdate' => 'getBirthdate',
        'smoker' => 'getSmoker',
        'smokerSince' => 'getSmokerSince',
        'addressHome' => 'getAddressHome',
        'addressOffice' => 'getAddressOffice',
        'addressOther' => 'getAddressOther',
        'phoneHome' => 'getPhoneHome',
        'phoneHomeSecond' => 'getPhoneHomeSecond',
        'phoneAssistant' => 'getPhoneAssistant',
        'phoneOffice' => 'getPhoneOffice',
        'phoneOfficeSecond' => 'getPhoneOfficeSecond',
        'phoneCell' => 'getPhoneCell',
        'phonePager' => 'getPhonePager',
        'phoneFax' => 'getPhoneFax',
        'mainEmail' => 'getMainEmail',
        'emailPersonal' => 'getEmailPersonal',
        'webSite' => 'getWebSite',
        'emailBusiness' => 'getEmailBusiness',
        'emailOther' => 'getEmailOther',
        'notes' => 'getNotes',
        'peculiarity' => 'getPeculiarity',
        'endFinancialYear' => 'getEndFinancialYear',
        'users' => 'getUsers',
        'language' => 'getLanguage',
        'active' => 'getActive',
        'publish' => 'getPublish',
        'title' => 'getTitle',
        'suffix' => 'getSuffix',
        'civility' => 'getCivility',
        'civilityId' => 'getCivilityId',
        'personAddressed' => 'getPersonAddressed',
        'organizationLine1' => 'getOrganizationLine1',
        'organizationLine2' => 'getOrganizationLine2',
        'department' => 'getDepartment',
        'customerNumber' => 'getCustomerNumber',
        'addresses' => 'getAddresses',
        'phones' => 'getPhones',
        'emails' => 'getEmails',
        'webSites' => 'getWebSites',
        'birthPlace' => 'getBirthPlace',
        'nationality' => 'getNationality',
        'orgDateCreated' => 'getOrgDateCreated',
        'orgDateClosed' => 'getOrgDateClosed',
        'dateEndFinancialYear' => 'getDateEndFinancialYear',
        'orgIdNo' => 'getOrgIdNo',
        'orgFedNo' => 'getOrgFedNo',
        'orgProvNo' => 'getOrgProvNo',
        'orgStateId' => 'getOrgStateId',
        'orgEin' => 'getOrgEin',
        'spouse' => 'getSpouse',
        'externalKey' => 'getExternalKey',
        'externalKeyType' => 'getExternalKeyType',
        'classes' => 'getClasses',
        'groups' => 'getGroups',
        'hobbies' => 'getHobbies',
        'origins' => 'getOrigins',
        'domains' => 'getDomains',
        'territory' => 'getTerritory',
        'seg1' => 'getSeg1',
        'seg2' => 'getSeg2',
        'seg3' => 'getSeg3',
        'seg4' => 'getSeg4',
        'seg5' => 'getSeg5',
        'seg6' => 'getSeg6'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['uuid'] = $data['uuid'] ?? null;
        $this->container['typeContact'] = $data['typeContact'] ?? null;
        $this->container['indOrg'] = $data['indOrg'] ?? null;
        $this->container['displayName'] = $data['displayName'] ?? null;
        $this->container['firstName'] = $data['firstName'] ?? null;
        $this->container['nickname'] = $data['nickname'] ?? null;
        $this->container['middleName'] = $data['middleName'] ?? null;
        $this->container['lastName'] = $data['lastName'] ?? null;
        $this->container['corporationName'] = $data['corporationName'] ?? null;
        $this->container['corporationNameLine2'] = $data['corporationNameLine2'] ?? null;
        $this->container['rank'] = $data['rank'] ?? null;
        $this->container['facebookLink'] = $data['facebookLink'] ?? null;
        $this->container['twitterLink'] = $data['twitterLink'] ?? null;
        $this->container['linkedinLink'] = $data['linkedinLink'] ?? null;
        $this->container['avatar'] = $data['avatar'] ?? null;
        $this->container['picture'] = $data['picture'] ?? null;
        $this->container['gender'] = $data['gender'] ?? null;
        $this->container['sin'] = $data['sin'] ?? null;
        $this->container['birthdate'] = $data['birthdate'] ?? null;
        $this->container['smoker'] = $data['smoker'] ?? null;
        $this->container['smokerSince'] = $data['smokerSince'] ?? null;
        $this->container['addressHome'] = $data['addressHome'] ?? null;
        $this->container['addressOffice'] = $data['addressOffice'] ?? null;
        $this->container['addressOther'] = $data['addressOther'] ?? null;
        $this->container['phoneHome'] = $data['phoneHome'] ?? null;
        $this->container['phoneHomeSecond'] = $data['phoneHomeSecond'] ?? null;
        $this->container['phoneAssistant'] = $data['phoneAssistant'] ?? null;
        $this->container['phoneOffice'] = $data['phoneOffice'] ?? null;
        $this->container['phoneOfficeSecond'] = $data['phoneOfficeSecond'] ?? null;
        $this->container['phoneCell'] = $data['phoneCell'] ?? null;
        $this->container['phonePager'] = $data['phonePager'] ?? null;
        $this->container['phoneFax'] = $data['phoneFax'] ?? null;
        $this->container['mainEmail'] = $data['mainEmail'] ?? null;
        $this->container['emailPersonal'] = $data['emailPersonal'] ?? null;
        $this->container['webSite'] = $data['webSite'] ?? null;
        $this->container['emailBusiness'] = $data['emailBusiness'] ?? null;
        $this->container['emailOther'] = $data['emailOther'] ?? null;
        $this->container['notes'] = $data['notes'] ?? null;
        $this->container['peculiarity'] = $data['peculiarity'] ?? null;
        $this->container['endFinancialYear'] = $data['endFinancialYear'] ?? null;
        $this->container['users'] = $data['users'] ?? null;
        $this->container['language'] = $data['language'] ?? null;
        $this->container['active'] = $data['active'] ?? null;
        $this->container['publish'] = $data['publish'] ?? null;
        $this->container['title'] = $data['title'] ?? null;
        $this->container['suffix'] = $data['suffix'] ?? null;
        $this->container['civility'] = $data['civility'] ?? null;
        $this->container['civilityId'] = $data['civilityId'] ?? null;
        $this->container['personAddressed'] = $data['personAddressed'] ?? null;
        $this->container['organizationLine1'] = $data['organizationLine1'] ?? null;
        $this->container['organizationLine2'] = $data['organizationLine2'] ?? null;
        $this->container['department'] = $data['department'] ?? null;
        $this->container['customerNumber'] = $data['customerNumber'] ?? null;
        $this->container['addresses'] = $data['addresses'] ?? null;
        $this->container['phones'] = $data['phones'] ?? null;
        $this->container['emails'] = $data['emails'] ?? null;
        $this->container['webSites'] = $data['webSites'] ?? null;
        $this->container['birthPlace'] = $data['birthPlace'] ?? null;
        $this->container['nationality'] = $data['nationality'] ?? null;
        $this->container['orgDateCreated'] = $data['orgDateCreated'] ?? null;
        $this->container['orgDateClosed'] = $data['orgDateClosed'] ?? null;
        $this->container['dateEndFinancialYear'] = $data['dateEndFinancialYear'] ?? null;
        $this->container['orgIdNo'] = $data['orgIdNo'] ?? null;
        $this->container['orgFedNo'] = $data['orgFedNo'] ?? null;
        $this->container['orgProvNo'] = $data['orgProvNo'] ?? null;
        $this->container['orgStateId'] = $data['orgStateId'] ?? null;
        $this->container['orgEin'] = $data['orgEin'] ?? null;
        $this->container['spouse'] = $data['spouse'] ?? null;
        $this->container['externalKey'] = $data['externalKey'] ?? null;
        $this->container['externalKeyType'] = $data['externalKeyType'] ?? null;
        $this->container['classes'] = $data['classes'] ?? null;
        $this->container['groups'] = $data['groups'] ?? null;
        $this->container['hobbies'] = $data['hobbies'] ?? null;
        $this->container['origins'] = $data['origins'] ?? null;
        $this->container['domains'] = $data['domains'] ?? null;
        $this->container['territory'] = $data['territory'] ?? null;
        $this->container['seg1'] = $data['seg1'] ?? null;
        $this->container['seg2'] = $data['seg2'] ?? null;
        $this->container['seg3'] = $data['seg3'] ?? null;
        $this->container['seg4'] = $data['seg4'] ?? null;
        $this->container['seg5'] = $data['seg5'] ?? null;
        $this->container['seg6'] = $data['seg6'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string|null $id Unique id.
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets uuid
     *
     * @return string|null
     */
    public function getUuid()
    {
        return $this->container['uuid'];
    }

    /**
     * Sets uuid
     *
     * @param string|null $uuid Contact UUID.
     *
     * @return self
     */
    public function setUuid($uuid)
    {
        $this->container['uuid'] = $uuid;

        return $this;
    }

    /**
     * Gets typeContact
     *
     * @return string|null
     */
    public function getTypeContact()
    {
        return $this->container['typeContact'];
    }

    /**
     * Sets typeContact
     *
     * @param string|null $typeContact Type of the contact.
     *
     * @return self
     */
    public function setTypeContact($typeContact)
    {
        $this->container['typeContact'] = $typeContact;

        return $this;
    }

    /**
     * Gets indOrg
     *
     * @return string|null
     */
    public function getIndOrg()
    {
        return $this->container['indOrg'];
    }

    /**
     * Sets indOrg
     *
     * @param string|null $indOrg Type INDIVIDUAL OR ORGANIZATION.
     *
     * @return self
     */
    public function setIndOrg($indOrg)
    {
        $this->container['indOrg'] = $indOrg;

        return $this;
    }

    /**
     * Gets displayName
     *
     * @return string|null
     */
    public function getDisplayName()
    {
        return $this->container['displayName'];
    }

    /**
     * Sets displayName
     *
     * @param string|null $displayName Display name of the contact.
     *
     * @return self
     */
    public function setDisplayName($displayName)
    {
        $this->container['displayName'] = $displayName;

        return $this;
    }

    /**
     * Gets firstName
     *
     * @return string|null
     */
    public function getFirstName()
    {
        return $this->container['firstName'];
    }

    /**
     * Sets firstName
     *
     * @param string|null $firstName First name of the contact.
     *
     * @return self
     */
    public function setFirstName($firstName)
    {
        $this->container['firstName'] = $firstName;

        return $this;
    }

    /**
     * Gets nickname
     *
     * @return string|null
     */
    public function getNickname()
    {
        return $this->container['nickname'];
    }

    /**
     * Sets nickname
     *
     * @param string|null $nickname Nickname of the contact.
     *
     * @return self
     */
    public function setNickname($nickname)
    {
        $this->container['nickname'] = $nickname;

        return $this;
    }

    /**
     * Gets middleName
     *
     * @return string|null
     */
    public function getMiddleName()
    {
        return $this->container['middleName'];
    }

    /**
     * Sets middleName
     *
     * @param string|null $middleName Middle name of the contact.
     *
     * @return self
     */
    public function setMiddleName($middleName)
    {
        $this->container['middleName'] = $middleName;

        return $this;
    }

    /**
     * Gets lastName
     *
     * @return string|null
     */
    public function getLastName()
    {
        return $this->container['lastName'];
    }

    /**
     * Sets lastName
     *
     * @param string|null $lastName Last name of the contact.
     *
     * @return self
     */
    public function setLastName($lastName)
    {
        $this->container['lastName'] = $lastName;

        return $this;
    }

    /**
     * Gets corporationName
     *
     * @return string|null
     */
    public function getCorporationName()
    {
        return $this->container['corporationName'];
    }

    /**
     * Sets corporationName
     *
     * @param string|null $corporationName First line of corporation name (Organization).
     *
     * @return self
     */
    public function setCorporationName($corporationName)
    {
        $this->container['corporationName'] = $corporationName;

        return $this;
    }

    /**
     * Gets corporationNameLine2
     *
     * @return string|null
     */
    public function getCorporationNameLine2()
    {
        return $this->container['corporationNameLine2'];
    }

    /**
     * Sets corporationNameLine2
     *
     * @param string|null $corporationNameLine2 Second line of corporation name (Organization).
     *
     * @return self
     */
    public function setCorporationNameLine2($corporationNameLine2)
    {
        $this->container['corporationNameLine2'] = $corporationNameLine2;

        return $this;
    }

    /**
     * Gets rank
     *
     * @return string|null
     */
    public function getRank()
    {
        return $this->container['rank'];
    }

    /**
     * Sets rank
     *
     * @param string|null $rank Rank of the contact. (Industrial Alliance only).
     *
     * @return self
     */
    public function setRank($rank)
    {
        $this->container['rank'] = $rank;

        return $this;
    }

    /**
     * Gets facebookLink
     *
     * @return string|null
     */
    public function getFacebookLink()
    {
        return $this->container['facebookLink'];
    }

    /**
     * Sets facebookLink
     *
     * @param string|null $facebookLink Facebook link.
     *
     * @return self
     */
    public function setFacebookLink($facebookLink)
    {
        $this->container['facebookLink'] = $facebookLink;

        return $this;
    }

    /**
     * Gets twitterLink
     *
     * @return string|null
     */
    public function getTwitterLink()
    {
        return $this->container['twitterLink'];
    }

    /**
     * Sets twitterLink
     *
     * @param string|null $twitterLink Twitter link.
     *
     * @return self
     */
    public function setTwitterLink($twitterLink)
    {
        $this->container['twitterLink'] = $twitterLink;

        return $this;
    }

    /**
     * Gets linkedinLink
     *
     * @return string|null
     */
    public function getLinkedinLink()
    {
        return $this->container['linkedinLink'];
    }

    /**
     * Sets linkedinLink
     *
     * @param string|null $linkedinLink LinkedIn link.
     *
     * @return self
     */
    public function setLinkedinLink($linkedinLink)
    {
        $this->container['linkedinLink'] = $linkedinLink;

        return $this;
    }

    /**
     * Gets avatar
     *
     * @return int|null
     */
    public function getAvatar()
    {
        return $this->container['avatar'];
    }

    /**
     * Sets avatar
     *
     * @param int|null $avatar Avatar.
     *
     * @return self
     */
    public function setAvatar($avatar)
    {
        $this->container['avatar'] = $avatar;

        return $this;
    }

    /**
     * Gets picture
     *
     * @return \Equisoft\SDK\EquisoftConnect\Model\LegacyContactPicture|null
     */
    public function getPicture()
    {
        return $this->container['picture'];
    }

    /**
     * Sets picture
     *
     * @param \Equisoft\SDK\EquisoftConnect\Model\LegacyContactPicture|null $picture picture
     *
     * @return self
     */
    public function setPicture($picture)
    {
        $this->container['picture'] = $picture;

        return $this;
    }

    /**
     * Gets gender
     *
     * @return string|null
     */
    public function getGender()
    {
        return $this->container['gender'];
    }

    /**
     * Sets gender
     *
     * @param string|null $gender Gender of the contact. Either MALE or FEMALE.
     *
     * @return self
     */
    public function setGender($gender)
    {
        $this->container['gender'] = $gender;

        return $this;
    }

    /**
     * Gets sin
     *
     * @return string|null
     */
    public function getSin()
    {
        return $this->container['sin'];
    }

    /**
     * Sets sin
     *
     * @param string|null $sin Sin of the contact.
     *
     * @return self
     */
    public function setSin($sin)
    {
        $this->container['sin'] = $sin;

        return $this;
    }

    /**
     * Gets birthdate
     *
     * @return string|null
     */
    public function getBirthdate()
    {
        return $this->container['birthdate'];
    }

    /**
     * Sets birthdate
     *
     * @param string|null $birthdate Birthdate of the contact.
     *
     * @return self
     */
    public function setBirthdate($birthdate)
    {
        $this->container['birthdate'] = $birthdate;

        return $this;
    }

    /**
     * Gets smoker
     *
     * @return string|null
     */
    public function getSmoker()
    {
        return $this->container['smoker'];
    }

    /**
     * Sets smoker
     *
     * @param string|null $smoker Smoker status of the contact.
     *
     * @return self
     */
    public function setSmoker($smoker)
    {
        $this->container['smoker'] = $smoker;

        return $this;
    }

    /**
     * Gets smokerSince
     *
     * @return string|null
     */
    public function getSmokerSince()
    {
        return $this->container['smokerSince'];
    }

    /**
     * Sets smokerSince
     *
     * @param string|null $smokerSince Smoker status since date.
     *
     * @return self
     */
    public function setSmokerSince($smokerSince)
    {
        $this->container['smokerSince'] = $smokerSince;

        return $this;
    }

    /**
     * Gets addressHome
     *
     * @return \Equisoft\SDK\EquisoftConnect\Model\LegacyContactAddress|null
     */
    public function getAddressHome()
    {
        return $this->container['addressHome'];
    }

    /**
     * Sets addressHome
     *
     * @param \Equisoft\SDK\EquisoftConnect\Model\LegacyContactAddress|null $addressHome addressHome
     *
     * @return self
     */
    public function setAddressHome($addressHome)
    {
        $this->container['addressHome'] = $addressHome;

        return $this;
    }

    /**
     * Gets addressOffice
     *
     * @return \Equisoft\SDK\EquisoftConnect\Model\LegacyContactAddress|null
     */
    public function getAddressOffice()
    {
        return $this->container['addressOffice'];
    }

    /**
     * Sets addressOffice
     *
     * @param \Equisoft\SDK\EquisoftConnect\Model\LegacyContactAddress|null $addressOffice addressOffice
     *
     * @return self
     */
    public function setAddressOffice($addressOffice)
    {
        $this->container['addressOffice'] = $addressOffice;

        return $this;
    }

    /**
     * Gets addressOther
     *
     * @return \Equisoft\SDK\EquisoftConnect\Model\LegacyContactAddress|null
     */
    public function getAddressOther()
    {
        return $this->container['addressOther'];
    }

    /**
     * Sets addressOther
     *
     * @param \Equisoft\SDK\EquisoftConnect\Model\LegacyContactAddress|null $addressOther addressOther
     *
     * @return self
     */
    public function setAddressOther($addressOther)
    {
        $this->container['addressOther'] = $addressOther;

        return $this;
    }

    /**
     * Gets phoneHome
     *
     * @return string|null
     */
    public function getPhoneHome()
    {
        return $this->container['phoneHome'];
    }

    /**
     * Sets phoneHome
     *
     * @param string|null $phoneHome Phone number of the contact at home.
     *
     * @return self
     */
    public function setPhoneHome($phoneHome)
    {
        $this->container['phoneHome'] = $phoneHome;

        return $this;
    }

    /**
     * Gets phoneHomeSecond
     *
     * @return string|null
     */
    public function getPhoneHomeSecond()
    {
        return $this->container['phoneHomeSecond'];
    }

    /**
     * Sets phoneHomeSecond
     *
     * @param string|null $phoneHomeSecond Second phone number of the contact at home.
     *
     * @return self
     */
    public function setPhoneHomeSecond($phoneHomeSecond)
    {
        $this->container['phoneHomeSecond'] = $phoneHomeSecond;

        return $this;
    }

    /**
     * Gets phoneAssistant
     *
     * @return string|null
     */
    public function getPhoneAssistant()
    {
        return $this->container['phoneAssistant'];
    }

    /**
     * Sets phoneAssistant
     *
     * @param string|null $phoneAssistant Assistant phone number of the contact.
     *
     * @return self
     */
    public function setPhoneAssistant($phoneAssistant)
    {
        $this->container['phoneAssistant'] = $phoneAssistant;

        return $this;
    }

    /**
     * Gets phoneOffice
     *
     * @return string|null
     */
    public function getPhoneOffice()
    {
        return $this->container['phoneOffice'];
    }

    /**
     * Sets phoneOffice
     *
     * @param string|null $phoneOffice Office phone number of the contact.
     *
     * @return self
     */
    public function setPhoneOffice($phoneOffice)
    {
        $this->container['phoneOffice'] = $phoneOffice;

        return $this;
    }

    /**
     * Gets phoneOfficeSecond
     *
     * @return string|null
     */
    public function getPhoneOfficeSecond()
    {
        return $this->container['phoneOfficeSecond'];
    }

    /**
     * Sets phoneOfficeSecond
     *
     * @param string|null $phoneOfficeSecond Second office phone number of the contact.
     *
     * @return self
     */
    public function setPhoneOfficeSecond($phoneOfficeSecond)
    {
        $this->container['phoneOfficeSecond'] = $phoneOfficeSecond;

        return $this;
    }

    /**
     * Gets phoneCell
     *
     * @return string|null
     */
    public function getPhoneCell()
    {
        return $this->container['phoneCell'];
    }

    /**
     * Sets phoneCell
     *
     * @param string|null $phoneCell Cell phone number of the contact.
     *
     * @return self
     */
    public function setPhoneCell($phoneCell)
    {
        $this->container['phoneCell'] = $phoneCell;

        return $this;
    }

    /**
     * Gets phonePager
     *
     * @return string|null
     */
    public function getPhonePager()
    {
        return $this->container['phonePager'];
    }

    /**
     * Sets phonePager
     *
     * @param string|null $phonePager Pager phone number of the contact.
     *
     * @return self
     */
    public function setPhonePager($phonePager)
    {
        $this->container['phonePager'] = $phonePager;

        return $this;
    }

    /**
     * Gets phoneFax
     *
     * @return string|null
     */
    public function getPhoneFax()
    {
        return $this->container['phoneFax'];
    }

    /**
     * Sets phoneFax
     *
     * @param string|null $phoneFax Fax phone number of the contact.
     *
     * @return self
     */
    public function setPhoneFax($phoneFax)
    {
        $this->container['phoneFax'] = $phoneFax;

        return $this;
    }

    /**
     * Gets mainEmail
     *
     * @return string|null
     */
    public function getMainEmail()
    {
        return $this->container['mainEmail'];
    }

    /**
     * Sets mainEmail
     *
     * @param string|null $mainEmail Main email of the contact.
     *
     * @return self
     */
    public function setMainEmail($mainEmail)
    {
        $this->container['mainEmail'] = $mainEmail;

        return $this;
    }

    /**
     * Gets emailPersonal
     *
     * @return string|null
     */
    public function getEmailPersonal()
    {
        return $this->container['emailPersonal'];
    }

    /**
     * Sets emailPersonal
     *
     * @param string|null $emailPersonal Personal email of the contact.
     *
     * @return self
     */
    public function setEmailPersonal($emailPersonal)
    {
        $this->container['emailPersonal'] = $emailPersonal;

        return $this;
    }

    /**
     * Gets webSite
     *
     * @return string|null
     */
    public function getWebSite()
    {
        return $this->container['webSite'];
    }

    /**
     * Sets webSite
     *
     * @param string|null $webSite Web Site URL. This represent the main website for the contact.
     *
     * @return self
     */
    public function setWebSite($webSite)
    {
        $this->container['webSite'] = $webSite;

        return $this;
    }

    /**
     * Gets emailBusiness
     *
     * @return string|null
     */
    public function getEmailBusiness()
    {
        return $this->container['emailBusiness'];
    }

    /**
     * Sets emailBusiness
     *
     * @param string|null $emailBusiness Business email of the contact.
     *
     * @return self
     */
    public function setEmailBusiness($emailBusiness)
    {
        $this->container['emailBusiness'] = $emailBusiness;

        return $this;
    }

    /**
     * Gets emailOther
     *
     * @return string|null
     */
    public function getEmailOther()
    {
        return $this->container['emailOther'];
    }

    /**
     * Sets emailOther
     *
     * @param string|null $emailOther Business email of the contact.
     *
     * @return self
     */
    public function setEmailOther($emailOther)
    {
        $this->container['emailOther'] = $emailOther;

        return $this;
    }

    /**
     * Gets notes
     *
     * @return string|null
     */
    public function getNotes()
    {
        return $this->container['notes'];
    }

    /**
     * Sets notes
     *
     * @param string|null $notes Notes of the contact.
     *
     * @return self
     */
    public function setNotes($notes)
    {
        $this->container['notes'] = $notes;

        return $this;
    }

    /**
     * Gets peculiarity
     *
     * @return string|null
     */
    public function getPeculiarity()
    {
        return $this->container['peculiarity'];
    }

    /**
     * Sets peculiarity
     *
     * @param string|null $peculiarity Peculiarity of the contact.
     *
     * @return self
     */
    public function setPeculiarity($peculiarity)
    {
        $this->container['peculiarity'] = $peculiarity;

        return $this;
    }

    /**
     * Gets endFinancialYear
     *
     * @return string|null
     */
    public function getEndFinancialYear()
    {
        return $this->container['endFinancialYear'];
    }

    /**
     * Sets endFinancialYear
     *
     * @param string|null $endFinancialYear End of the financial year (for organization).
     *
     * @return self
     */
    public function setEndFinancialYear($endFinancialYear)
    {
        $this->container['endFinancialYear'] = $endFinancialYear;

        return $this;
    }

    /**
     * Gets users
     *
     * @return \Equisoft\SDK\EquisoftConnect\Model\LegacyUser[]|null
     */
    public function getUsers()
    {
        return $this->container['users'];
    }

    /**
     * Sets users
     *
     * @param \Equisoft\SDK\EquisoftConnect\Model\LegacyUser[]|null $users Owner of the contact. By default use the current api user.
     *
     * @return self
     */
    public function setUsers($users)
    {
        $this->container['users'] = $users;

        return $this;
    }

    /**
     * Gets language
     *
     * @return string|null
     */
    public function getLanguage()
    {
        return $this->container['language'];
    }

    /**
     * Sets language
     *
     * @param string|null $language Language.
     *
     * @return self
     */
    public function setLanguage($language)
    {
        $this->container['language'] = $language;

        return $this;
    }

    /**
     * Gets active
     *
     * @return string|null
     */
    public function getActive()
    {
        return $this->container['active'];
    }

    /**
     * Sets active
     *
     * @param string|null $active Active (boolean).
     *
     * @return self
     */
    public function setActive($active)
    {
        $this->container['active'] = $active;

        return $this;
    }

    /**
     * Gets publish
     *
     * @return string|null
     */
    public function getPublish()
    {
        return $this->container['publish'];
    }

    /**
     * Sets publish
     *
     * @param string|null $publish Publish (boolean).
     *
     * @return self
     */
    public function setPublish($publish)
    {
        $this->container['publish'] = $publish;

        return $this;
    }

    /**
     * Gets title
     *
     * @return string|null
     */
    public function getTitle()
    {
        return $this->container['title'];
    }

    /**
     * Sets title
     *
     * @param string|null $title Title.
     *
     * @return self
     */
    public function setTitle($title)
    {
        $this->container['title'] = $title;

        return $this;
    }

    /**
     * Gets suffix
     *
     * @return string|null
     */
    public function getSuffix()
    {
        return $this->container['suffix'];
    }

    /**
     * Sets suffix
     *
     * @param string|null $suffix Suffix.
     *
     * @return self
     */
    public function setSuffix($suffix)
    {
        $this->container['suffix'] = $suffix;

        return $this;
    }

    /**
     * Gets civility
     *
     * @return string|null
     */
    public function getCivility()
    {
        return $this->container['civility'];
    }

    /**
     * Sets civility
     *
     * @param string|null $civility Civility.
     *
     * @return self
     */
    public function setCivility($civility)
    {
        $this->container['civility'] = $civility;

        return $this;
    }

    /**
     * Gets civilityId
     *
     * @return int|null
     */
    public function getCivilityId()
    {
        return $this->container['civilityId'];
    }

    /**
     * Sets civilityId
     *
     * @param int|null $civilityId Civility id.
     *
     * @return self
     */
    public function setCivilityId($civilityId)
    {
        $this->container['civilityId'] = $civilityId;

        return $this;
    }

    /**
     * Gets personAddressed
     *
     * @return string|null
     */
    public function getPersonAddressed()
    {
        return $this->container['personAddressed'];
    }

    /**
     * Sets personAddressed
     *
     * @param string|null $personAddressed Person Addressed (Correspondance).
     *
     * @return self
     */
    public function setPersonAddressed($personAddressed)
    {
        $this->container['personAddressed'] = $personAddressed;

        return $this;
    }

    /**
     * Gets organizationLine1
     *
     * @return string|null
     */
    public function getOrganizationLine1()
    {
        return $this->container['organizationLine1'];
    }

    /**
     * Sets organizationLine1
     *
     * @param string|null $organizationLine1 Organization name (Correspondance).
     *
     * @return self
     */
    public function setOrganizationLine1($organizationLine1)
    {
        $this->container['organizationLine1'] = $organizationLine1;

        return $this;
    }

    /**
     * Gets organizationLine2
     *
     * @return string|null
     */
    public function getOrganizationLine2()
    {
        return $this->container['organizationLine2'];
    }

    /**
     * Sets organizationLine2
     *
     * @param string|null $organizationLine2 Organization name - second line (Correspondance).
     *
     * @return self
     */
    public function setOrganizationLine2($organizationLine2)
    {
        $this->container['organizationLine2'] = $organizationLine2;

        return $this;
    }

    /**
     * Gets department
     *
     * @return string|null
     */
    public function getDepartment()
    {
        return $this->container['department'];
    }

    /**
     * Sets department
     *
     * @param string|null $department Department (Correspondance).
     *
     * @return self
     */
    public function setDepartment($department)
    {
        $this->container['department'] = $department;

        return $this;
    }

    /**
     * Gets customerNumber
     *
     * @return string|null
     */
    public function getCustomerNumber()
    {
        return $this->container['customerNumber'];
    }

    /**
     * Sets customerNumber
     *
     * @param string|null $customerNumber Customer Number.
     *
     * @return self
     */
    public function setCustomerNumber($customerNumber)
    {
        $this->container['customerNumber'] = $customerNumber;

        return $this;
    }

    /**
     * Gets addresses
     *
     * @return \Equisoft\SDK\EquisoftConnect\Model\LegacyContactAddress[]|null
     */
    public function getAddresses()
    {
        return $this->container['addresses'];
    }

    /**
     * Sets addresses
     *
     * @param \Equisoft\SDK\EquisoftConnect\Model\LegacyContactAddress[]|null $addresses Contact addresses.
     *
     * @return self
     */
    public function setAddresses($addresses)
    {
        $this->container['addresses'] = $addresses;

        return $this;
    }

    /**
     * Gets phones
     *
     * @return \Equisoft\SDK\EquisoftConnect\Model\LegacyContactPhone[]|null
     */
    public function getPhones()
    {
        return $this->container['phones'];
    }

    /**
     * Sets phones
     *
     * @param \Equisoft\SDK\EquisoftConnect\Model\LegacyContactPhone[]|null $phones Contact phones.
     *
     * @return self
     */
    public function setPhones($phones)
    {
        $this->container['phones'] = $phones;

        return $this;
    }

    /**
     * Gets emails
     *
     * @return \Equisoft\SDK\EquisoftConnect\Model\LegacyContactEmail[]|null
     */
    public function getEmails()
    {
        return $this->container['emails'];
    }

    /**
     * Sets emails
     *
     * @param \Equisoft\SDK\EquisoftConnect\Model\LegacyContactEmail[]|null $emails Contact emails.
     *
     * @return self
     */
    public function setEmails($emails)
    {
        $this->container['emails'] = $emails;

        return $this;
    }

    /**
     * Gets webSites
     *
     * @return \Equisoft\SDK\EquisoftConnect\Model\LegacyContactWebSite[]|null
     */
    public function getWebSites()
    {
        return $this->container['webSites'];
    }

    /**
     * Sets webSites
     *
     * @param \Equisoft\SDK\EquisoftConnect\Model\LegacyContactWebSite[]|null $webSites Contact web sites.
     *
     * @return self
     */
    public function setWebSites($webSites)
    {
        $this->container['webSites'] = $webSites;

        return $this;
    }

    /**
     * Gets birthPlace
     *
     * @return string|null
     */
    public function getBirthPlace()
    {
        return $this->container['birthPlace'];
    }

    /**
     * Sets birthPlace
     *
     * @param string|null $birthPlace Birth Place.
     *
     * @return self
     */
    public function setBirthPlace($birthPlace)
    {
        $this->container['birthPlace'] = $birthPlace;

        return $this;
    }

    /**
     * Gets nationality
     *
     * @return string|null
     */
    public function getNationality()
    {
        return $this->container['nationality'];
    }

    /**
     * Sets nationality
     *
     * @param string|null $nationality Nationality.
     *
     * @return self
     */
    public function setNationality($nationality)
    {
        $this->container['nationality'] = $nationality;

        return $this;
    }

    /**
     * Gets orgDateCreated
     *
     * @return string|null
     */
    public function getOrgDateCreated()
    {
        return $this->container['orgDateCreated'];
    }

    /**
     * Sets orgDateCreated
     *
     * @param string|null $orgDateCreated Organization created date.
     *
     * @return self
     */
    public function setOrgDateCreated($orgDateCreated)
    {
        $this->container['orgDateCreated'] = $orgDateCreated;

        return $this;
    }

    /**
     * Gets orgDateClosed
     *
     * @return string|null
     */
    public function getOrgDateClosed()
    {
        return $this->container['orgDateClosed'];
    }

    /**
     * Sets orgDateClosed
     *
     * @param string|null $orgDateClosed Organization closed date.
     *
     * @return self
     */
    public function setOrgDateClosed($orgDateClosed)
    {
        $this->container['orgDateClosed'] = $orgDateClosed;

        return $this;
    }

    /**
     * Gets dateEndFinancialYear
     *
     * @return string|null
     */
    public function getDateEndFinancialYear()
    {
        return $this->container['dateEndFinancialYear'];
    }

    /**
     * Sets dateEndFinancialYear
     *
     * @param string|null $dateEndFinancialYear Financial year end date.
     *
     * @return self
     */
    public function setDateEndFinancialYear($dateEndFinancialYear)
    {
        $this->container['dateEndFinancialYear'] = $dateEndFinancialYear;

        return $this;
    }

    /**
     * Gets orgIdNo
     *
     * @return string|null
     */
    public function getOrgIdNo()
    {
        return $this->container['orgIdNo'];
    }

    /**
     * Sets orgIdNo
     *
     * @param string|null $orgIdNo Organization identification number.
     *
     * @return self
     */
    public function setOrgIdNo($orgIdNo)
    {
        $this->container['orgIdNo'] = $orgIdNo;

        return $this;
    }

    /**
     * Gets orgFedNo
     *
     * @return string|null
     */
    public function getOrgFedNo()
    {
        return $this->container['orgFedNo'];
    }

    /**
     * Sets orgFedNo
     *
     * @param string|null $orgFedNo Organization federal number.
     *
     * @return self
     */
    public function setOrgFedNo($orgFedNo)
    {
        $this->container['orgFedNo'] = $orgFedNo;

        return $this;
    }

    /**
     * Gets orgProvNo
     *
     * @return string|null
     */
    public function getOrgProvNo()
    {
        return $this->container['orgProvNo'];
    }

    /**
     * Sets orgProvNo
     *
     * @param string|null $orgProvNo Organization provincial number.
     *
     * @return self
     */
    public function setOrgProvNo($orgProvNo)
    {
        $this->container['orgProvNo'] = $orgProvNo;

        return $this;
    }

    /**
     * Gets orgStateId
     *
     * @return string|null
     */
    public function getOrgStateId()
    {
        return $this->container['orgStateId'];
    }

    /**
     * Sets orgStateId
     *
     * @param string|null $orgStateId Organization state identification
     *
     * @return self
     */
    public function setOrgStateId($orgStateId)
    {
        $this->container['orgStateId'] = $orgStateId;

        return $this;
    }

    /**
     * Gets orgEin
     *
     * @return string|null
     */
    public function getOrgEin()
    {
        return $this->container['orgEin'];
    }

    /**
     * Sets orgEin
     *
     * @param string|null $orgEin Organization EIN.
     *
     * @return self
     */
    public function setOrgEin($orgEin)
    {
        $this->container['orgEin'] = $orgEin;

        return $this;
    }

    /**
     * Gets spouse
     *
     * @return \Equisoft\SDK\EquisoftConnect\Model\LegacyContactSpouseContactPayloadItem|null
     */
    public function getSpouse()
    {
        return $this->container['spouse'];
    }

    /**
     * Sets spouse
     *
     * @param \Equisoft\SDK\EquisoftConnect\Model\LegacyContactSpouseContactPayloadItem|null $spouse spouse
     *
     * @return self
     */
    public function setSpouse($spouse)
    {
        $this->container['spouse'] = $spouse;

        return $this;
    }

    /**
     * Gets externalKey
     *
     * @return string|null
     */
    public function getExternalKey()
    {
        return $this->container['externalKey'];
    }

    /**
     * Sets externalKey
     *
     * @param string|null $externalKey External key.
     *
     * @return self
     */
    public function setExternalKey($externalKey)
    {
        $this->container['externalKey'] = $externalKey;

        return $this;
    }

    /**
     * Gets externalKeyType
     *
     * @return string|null
     */
    public function getExternalKeyType()
    {
        return $this->container['externalKeyType'];
    }

    /**
     * Sets externalKeyType
     *
     * @param string|null $externalKeyType External key type.
     *
     * @return self
     */
    public function setExternalKeyType($externalKeyType)
    {
        $this->container['externalKeyType'] = $externalKeyType;

        return $this;
    }

    /**
     * Gets classes
     *
     * @return \Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue[]|null
     */
    public function getClasses()
    {
        return $this->container['classes'];
    }

    /**
     * Sets classes
     *
     * @param \Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue[]|null $classes Classes.
     *
     * @return self
     */
    public function setClasses($classes)
    {
        $this->container['classes'] = $classes;

        return $this;
    }

    /**
     * Gets groups
     *
     * @return \Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue[]|null
     */
    public function getGroups()
    {
        return $this->container['groups'];
    }

    /**
     * Sets groups
     *
     * @param \Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue[]|null $groups Mailing groups.
     *
     * @return self
     */
    public function setGroups($groups)
    {
        $this->container['groups'] = $groups;

        return $this;
    }

    /**
     * Gets hobbies
     *
     * @return \Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue[]|null
     */
    public function getHobbies()
    {
        return $this->container['hobbies'];
    }

    /**
     * Sets hobbies
     *
     * @param \Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue[]|null $hobbies Hobbies.
     *
     * @return self
     */
    public function setHobbies($hobbies)
    {
        $this->container['hobbies'] = $hobbies;

        return $this;
    }

    /**
     * Gets origins
     *
     * @return \Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue[]|null
     */
    public function getOrigins()
    {
        return $this->container['origins'];
    }

    /**
     * Sets origins
     *
     * @param \Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue[]|null $origins Origins.
     *
     * @return self
     */
    public function setOrigins($origins)
    {
        $this->container['origins'] = $origins;

        return $this;
    }

    /**
     * Gets domains
     *
     * @return \Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue[]|null
     */
    public function getDomains()
    {
        return $this->container['domains'];
    }

    /**
     * Sets domains
     *
     * @param \Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue[]|null $domains Activity Domains.
     *
     * @return self
     */
    public function setDomains($domains)
    {
        $this->container['domains'] = $domains;

        return $this;
    }

    /**
     * Gets territory
     *
     * @return \Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue|null
     */
    public function getTerritory()
    {
        return $this->container['territory'];
    }

    /**
     * Sets territory
     *
     * @param \Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue|null $territory territory
     *
     * @return self
     */
    public function setTerritory($territory)
    {
        $this->container['territory'] = $territory;

        return $this;
    }

    /**
     * Gets seg1
     *
     * @return \Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue|null
     */
    public function getSeg1()
    {
        return $this->container['seg1'];
    }

    /**
     * Sets seg1
     *
     * @param \Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue|null $seg1 seg1
     *
     * @return self
     */
    public function setSeg1($seg1)
    {
        $this->container['seg1'] = $seg1;

        return $this;
    }

    /**
     * Gets seg2
     *
     * @return \Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue|null
     */
    public function getSeg2()
    {
        return $this->container['seg2'];
    }

    /**
     * Sets seg2
     *
     * @param \Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue|null $seg2 seg2
     *
     * @return self
     */
    public function setSeg2($seg2)
    {
        $this->container['seg2'] = $seg2;

        return $this;
    }

    /**
     * Gets seg3
     *
     * @return \Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue|null
     */
    public function getSeg3()
    {
        return $this->container['seg3'];
    }

    /**
     * Sets seg3
     *
     * @param \Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue|null $seg3 seg3
     *
     * @return self
     */
    public function setSeg3($seg3)
    {
        $this->container['seg3'] = $seg3;

        return $this;
    }

    /**
     * Gets seg4
     *
     * @return \Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue|null
     */
    public function getSeg4()
    {
        return $this->container['seg4'];
    }

    /**
     * Sets seg4
     *
     * @param \Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue|null $seg4 seg4
     *
     * @return self
     */
    public function setSeg4($seg4)
    {
        $this->container['seg4'] = $seg4;

        return $this;
    }

    /**
     * Gets seg5
     *
     * @return \Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue|null
     */
    public function getSeg5()
    {
        return $this->container['seg5'];
    }

    /**
     * Sets seg5
     *
     * @param \Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue|null $seg5 seg5
     *
     * @return self
     */
    public function setSeg5($seg5)
    {
        $this->container['seg5'] = $seg5;

        return $this;
    }

    /**
     * Gets seg6
     *
     * @return \Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue|null
     */
    public function getSeg6()
    {
        return $this->container['seg6'];
    }

    /**
     * Sets seg6
     *
     * @param \Equisoft\SDK\EquisoftConnect\Model\LegacySystemLinkedValue|null $seg6 seg6
     *
     * @return self
     */
    public function setSeg6($seg6)
    {
        $this->container['seg6'] = $seg6;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


