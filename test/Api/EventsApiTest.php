<?php
/**
 * EventsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Equisoft\SDK\EquisoftConnect
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Equisoft /connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Equisoft\SDK\EquisoftConnect\Test\Api;

use \Equisoft\SDK\EquisoftConnect\Configuration;
use \Equisoft\SDK\EquisoftConnect\ApiException;
use \Equisoft\SDK\EquisoftConnect\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * EventsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Equisoft\SDK\EquisoftConnect
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class EventsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for archiveEventInternalNote
     *
     * Archive an internal note for and event..
     *
     */
    public function testArchiveEventInternalNote()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createEvent
     *
     * Create an event..
     *
     */
    public function testCreateEvent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createEventInternalNote
     *
     * Add an internal note to and event..
     *
     */
    public function testCreateEventInternalNote()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteEvent
     *
     * Delete an event..
     *
     */
    public function testDeleteEvent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCalendar
     *
     * Get informations about a calendar or a default calendar..
     *
     */
    public function testGetCalendar()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEvent
     *
     * Return the detail of an event..
     *
     */
    public function testGetEvent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEventInstances
     *
     * Get a recurring event instances..
     *
     */
    public function testGetEventInstances()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEventInternalNoteList
     *
     * Get the internal notes list for an event..
     *
     */
    public function testGetEventInternalNoteList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listCalendars
     *
     * Get the list of available calendars..
     *
     */
    public function testListCalendars()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listEvents
     *
     * List or search events..
     *
     */
    public function testListEvents()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patchEvent
     *
     * Partially update an event..
     *
     */
    public function testPatchEvent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patchEventInternalNote
     *
     * Add an internal note to and event..
     *
     */
    public function testPatchEventInternalNote()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restoreEventInternalNote
     *
     * Restore an archived internal note for an event..
     *
     */
    public function testRestoreEventInternalNote()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for transferEventToCompleted
     *
     * Transfer an event to the completed/done calendar..
     *
     */
    public function testTransferEventToCompleted()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
