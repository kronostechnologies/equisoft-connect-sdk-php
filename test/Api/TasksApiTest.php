<?php
/**
 * TasksApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Equisoft\SDK\EquisoftConnect
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Equisoft /connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Equisoft\SDK\EquisoftConnect\Test\Api;

use \Equisoft\SDK\EquisoftConnect\Configuration;
use \Equisoft\SDK\EquisoftConnect\ApiException;
use \Equisoft\SDK\EquisoftConnect\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * TasksApiTest Class Doc Comment
 *
 * @category Class
 * @package  Equisoft\SDK\EquisoftConnect
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class TasksApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for archiveTaskInternalNote
     *
     * Archive an internal note for a task..
     *
     */
    public function testArchiveTaskInternalNote()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createTask
     *
     * Create a task..
     *
     */
    public function testCreateTask()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createTaskInternalNote
     *
     * Add an internal note to a task..
     *
     */
    public function testCreateTaskInternalNote()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteTask
     *
     * Delete a task..
     *
     */
    public function testDeleteTask()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getTask
     *
     * Return the detail of a task..
     *
     */
    public function testGetTask()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getTaskInternalNoteList
     *
     * Get the internal notes list for a task..
     *
     */
    public function testGetTaskInternalNoteList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listTasks
     *
     * List or search tasks..
     *
     */
    public function testListTasks()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patchTask
     *
     * Partially update a task..
     *
     */
    public function testPatchTask()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patchTaskInternalNote
     *
     * Edit an internal note for a task..
     *
     */
    public function testPatchTaskInternalNote()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for putTaskLinksDocuments
     *
     * Update the links between a task and existing documents..
     *
     */
    public function testPutTaskLinksDocuments()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restoreTaskInternalNote
     *
     * Restore an archived internal note for a task..
     *
     */
    public function testRestoreTaskInternalNote()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for transferTaskToCompleted
     *
     * Transfer a task to completed/done..
     *
     */
    public function testTransferTaskToCompleted()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
