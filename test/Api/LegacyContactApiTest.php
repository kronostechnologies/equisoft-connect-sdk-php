<?php
/**
 * LegacyContactApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Equisoft\SDK\EquisoftConnect
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Equisoft /connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.7.0-equisoft2
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Equisoft\SDK\EquisoftConnect\Test\Api;

use \Equisoft\SDK\EquisoftConnect\Configuration;
use \Equisoft\SDK\EquisoftConnect\ApiException;
use \Equisoft\SDK\EquisoftConnect\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * LegacyContactApiTest Class Doc Comment
 *
 * @category Class
 * @package  Equisoft\SDK\EquisoftConnect
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class LegacyContactApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for legacyContactAddContact
     *
     * Create a new contact..
     *
     */
    public function testLegacyContactAddContact()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for legacyContactDeleteContact
     *
     * Delete a contact..
     *
     */
    public function testLegacyContactDeleteContact()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for legacyContactGetContact
     *
     * Get complete record for a contact..
     *
     */
    public function testLegacyContactGetContact()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for legacyContactGetContactAccessRights
     *
     * Get access rights for a contact..
     *
     */
    public function testLegacyContactGetContactAccessRights()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for legacyContactGetContactAccessRightsByExternalId
     *
     * Get access rights for a contact using external id..
     *
     */
    public function testLegacyContactGetContactAccessRightsByExternalId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for legacyContactGetContactList
     *
     * Get a list of all contacts..
     *
     */
    public function testLegacyContactGetContactList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for legacyContactGetDatagatewayUniverisContact
     *
     * Get access rights for a contact using external key..
     *
     */
    public function testLegacyContactGetDatagatewayUniverisContact()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for legacyContactPatchContact
     *
     * Patch a contact..
     *
     */
    public function testLegacyContactPatchContact()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for legacyContactUpdateContact
     *
     * Update a contact..
     *
     */
    public function testLegacyContactUpdateContact()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
