<?php
/**
 * InvestmentsCannexInformationTest
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  Equisoft\SDK\EquisoftConnect
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Equisoft /connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.13.0-equisoft1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Equisoft\SDK\EquisoftConnect\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * InvestmentsCannexInformationTest Class Doc Comment
 *
 * @category    Class
 * @description InvestmentsCannexInformation
 * @package     Equisoft\SDK\EquisoftConnect
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class InvestmentsCannexInformationTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "InvestmentsCannexInformation"
     */
    public function testInvestmentsCannexInformation()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "currency"
     */
    public function testPropertyCurrency()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "loadType"
     */
    public function testPropertyLoadType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "rrspRrifEligible"
     */
    public function testPropertyRrspRrifEligible()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "priceType"
     */
    public function testPropertyPriceType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "portfolioFund"
     */
    public function testPropertyPortfolioFund()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "restrictedSale"
     */
    public function testPropertyRestrictedSale()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "valuationFrequency"
     */
    public function testPropertyValuationFrequency()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "valuationDay"
     */
    public function testPropertyValuationDay()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "loadsDifferInPrice"
     */
    public function testPropertyLoadsDifferInPrice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "netFees"
     */
    public function testPropertyNetFees()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "regionsAvailableForSale"
     */
    public function testPropertyRegionsAvailableForSale()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dscLoadType"
     */
    public function testPropertyDscLoadType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "accrualsAccumulation"
     */
    public function testPropertyAccrualsAccumulation()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "fiscalYearEnd"
     */
    public function testPropertyFiscalYearEnd()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "fiscalYearEndPeriod"
     */
    public function testPropertyFiscalYearEndPeriod()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "totalAssetsType"
     */
    public function testPropertyTotalAssetsType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "minimumInitialAmount"
     */
    public function testPropertyMinimumInitialAmount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "minimumSubsequentAmount"
     */
    public function testPropertyMinimumSubsequentAmount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "minimumRRSPInitialAmount"
     */
    public function testPropertyMinimumRRSPInitialAmount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "minimumRRSPSubsequentAmount"
     */
    public function testPropertyMinimumRRSPSubsequentAmount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "distributionPayout"
     */
    public function testPropertyDistributionPayout()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "distributions"
     */
    public function testPropertyDistributions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
