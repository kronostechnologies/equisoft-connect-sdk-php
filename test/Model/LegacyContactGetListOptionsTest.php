<?php
/**
 * LegacyContactGetListOptionsTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Equisoft\SDK\EquisoftConnect
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Equisoft /connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Equisoft\SDK\EquisoftConnect\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * LegacyContactGetListOptionsTest Class Doc Comment
 *
 * @category    Class
 * @description LegacyContactGetListOptions
 * @package     Equisoft\SDK\EquisoftConnect
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class LegacyContactGetListOptionsTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "LegacyContactGetListOptions"
     */
    public function testLegacyContactGetListOptions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "filterById"
     */
    public function testPropertyFilterById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "filterByName"
     */
    public function testPropertyFilterByName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "filterByClassId"
     */
    public function testPropertyFilterByClassId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "filterByLastName"
     */
    public function testPropertyFilterByLastName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "filterByFirstName"
     */
    public function testPropertyFilterByFirstName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "filterByNickName"
     */
    public function testPropertyFilterByNickName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "filterByMiddleName"
     */
    public function testPropertyFilterByMiddleName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "filterByRank"
     */
    public function testPropertyFilterByRank()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "filterByUser"
     */
    public function testPropertyFilterByUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "filterByIndividual"
     */
    public function testPropertyFilterByIndividual()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "filterByOrganization"
     */
    public function testPropertyFilterByOrganization()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "limit"
     */
    public function testPropertyLimit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "offset"
     */
    public function testPropertyOffset()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sortBy"
     */
    public function testPropertySortBy()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sortDesc"
     */
    public function testPropertySortDesc()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "active"
     */
    public function testPropertyActive()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "mailGroup"
     */
    public function testPropertyMailGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "excludeDeceased"
     */
    public function testPropertyExcludeDeceased()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "anniversary"
     */
    public function testPropertyAnniversary()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "anniversaryRange"
     */
    public function testPropertyAnniversaryRange()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "excludeFNA"
     */
    public function testPropertyExcludeFNA()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "search"
     */
    public function testPropertySearch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
